<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="Info.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <metadata name="Column1.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column2.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column3.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column4.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
</root>